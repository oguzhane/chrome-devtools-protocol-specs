{
    "openapi": "3.0.2",
    "info": {
        "title": "Chrome DevTools Protocol",
        "description": "Auto-generated OpenAPI 3.0 specification for Chrome Dev Tools Protocol's types, events, commands",
        "version": "1.0.0"
    },
    "paths": {},
    "components": {
        "schemas": {
            "TypeInspectorIssue": {
                "description": "An inspector issue reported from the back-end.",
                "type": "object",
                "properties": {
                    "code": {
                        "$ref": "./Audits.types.json#/components/schemas/TypeInspectorIssueCode"
                    },
                    "details": {
                        "$ref": "./Audits.types.json#/components/schemas/TypeInspectorIssueDetails"
                    },
                    "issueId": {
                        "description": "A unique id for this issue. May be omitted if no other entity (e.g.\nexception, CDP message, etc.) is referencing this issue.",
                        "$ref": "./Audits.types.json#/components/schemas/TypeIssueId"
                    }
                },
                "required": [
                    "code",
                    "details"
                ]
            },
            "TypeInspectorIssueCode": {
                "description": "A unique identifier for the type of issue. Each type may use one of the\noptional fields in InspectorIssueDetails to convey more specific\ninformation about the kind of issue.",
                "type": "string"
            },
            "TypeInspectorIssueDetails": {
                "description": "This struct holds a list of optional fields with additional information\nspecific to the kind of issue. When adding a new issue code, please also\nadd a new optional field to this type.",
                "type": "object",
                "properties": {
                    "cookieIssueDetails": {
                        "$ref": "./Audits.types.json#/components/schemas/TypeCookieIssueDetails"
                    },
                    "mixedContentIssueDetails": {
                        "$ref": "./Audits.types.json#/components/schemas/TypeMixedContentIssueDetails"
                    },
                    "blockedByResponseIssueDetails": {
                        "$ref": "./Audits.types.json#/components/schemas/TypeBlockedByResponseIssueDetails"
                    },
                    "heavyAdIssueDetails": {
                        "$ref": "./Audits.types.json#/components/schemas/TypeHeavyAdIssueDetails"
                    },
                    "contentSecurityPolicyIssueDetails": {
                        "$ref": "./Audits.types.json#/components/schemas/TypeContentSecurityPolicyIssueDetails"
                    },
                    "sharedArrayBufferIssueDetails": {
                        "$ref": "./Audits.types.json#/components/schemas/TypeSharedArrayBufferIssueDetails"
                    },
                    "twaQualityEnforcementDetails": {
                        "$ref": "./Audits.types.json#/components/schemas/TypeTrustedWebActivityIssueDetails"
                    },
                    "lowTextContrastIssueDetails": {
                        "$ref": "./Audits.types.json#/components/schemas/TypeLowTextContrastIssueDetails"
                    },
                    "corsIssueDetails": {
                        "$ref": "./Audits.types.json#/components/schemas/TypeCorsIssueDetails"
                    },
                    "attributionReportingIssueDetails": {
                        "$ref": "./Audits.types.json#/components/schemas/TypeAttributionReportingIssueDetails"
                    },
                    "quirksModeIssueDetails": {
                        "$ref": "./Audits.types.json#/components/schemas/TypeQuirksModeIssueDetails"
                    },
                    "navigatorUserAgentIssueDetails": {
                        "$ref": "./Audits.types.json#/components/schemas/TypeNavigatorUserAgentIssueDetails"
                    },
                    "genericIssueDetails": {
                        "$ref": "./Audits.types.json#/components/schemas/TypeGenericIssueDetails"
                    },
                    "deprecationIssueDetails": {
                        "$ref": "./Audits.types.json#/components/schemas/TypeDeprecationIssueDetails"
                    },
                    "clientHintIssueDetails": {
                        "$ref": "./Audits.types.json#/components/schemas/TypeClientHintIssueDetails"
                    },
                    "federatedAuthRequestIssueDetails": {
                        "$ref": "./Audits.types.json#/components/schemas/TypeFederatedAuthRequestIssueDetails"
                    }
                }
            },
            "TypeCookieIssueDetails": {
                "description": "This information is currently necessary, as the front-end has a difficult\ntime finding a specific cookie. With this, we can convey specific error\ninformation without the cookie.",
                "type": "object",
                "properties": {
                    "cookie": {
                        "description": "If AffectedCookie is not set then rawCookieLine contains the raw\nSet-Cookie header string. This hints at a problem where the\ncookie line is syntactically or semantically malformed in a way\nthat no valid cookie could be created.",
                        "$ref": "./Audits.types.json#/components/schemas/TypeAffectedCookie"
                    },
                    "rawCookieLine": {
                        "type": "string"
                    },
                    "cookieWarningReasons": {
                        "type": "array",
                        "items": {
                            "$ref": "./Audits.types.json#/components/schemas/TypeCookieWarningReason"
                        }
                    },
                    "cookieExclusionReasons": {
                        "type": "array",
                        "items": {
                            "$ref": "./Audits.types.json#/components/schemas/TypeCookieExclusionReason"
                        }
                    },
                    "operation": {
                        "description": "Optionally identifies the site-for-cookies and the cookie url, which\nmay be used by the front-end as additional context.",
                        "$ref": "./Audits.types.json#/components/schemas/TypeCookieOperation"
                    },
                    "siteForCookies": {
                        "type": "string"
                    },
                    "cookieUrl": {
                        "type": "string"
                    },
                    "request": {
                        "$ref": "./Audits.types.json#/components/schemas/TypeAffectedRequest"
                    }
                },
                "required": [
                    "cookieWarningReasons",
                    "cookieExclusionReasons",
                    "operation"
                ]
            },
            "TypeAffectedCookie": {
                "description": "Information about a cookie that is affected by an inspector issue.",
                "type": "object",
                "properties": {
                    "name": {
                        "description": "The following three properties uniquely identify a cookie",
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    },
                    "domain": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "path",
                    "domain"
                ]
            },
            "TypeCookieWarningReason": {
                "type": "string"
            },
            "TypeCookieExclusionReason": {
                "type": "string"
            },
            "TypeCookieOperation": {
                "type": "string"
            },
            "TypeAffectedRequest": {
                "description": "Information about a request that is affected by an inspector issue.",
                "type": "object",
                "properties": {
                    "requestId": {
                        "description": "The unique request id.",
                        "$ref": "./Network.types.json#/components/schemas/TypeRequestId"
                    },
                    "url": {
                        "type": "string"
                    }
                },
                "required": [
                    "requestId"
                ]
            },
            "TypeMixedContentIssueDetails": {
                "type": "object",
                "properties": {
                    "resourceType": {
                        "description": "The type of resource causing the mixed content issue (css, js, iframe,\nform,...). Marked as optional because it is mapped to from\nblink::mojom::RequestContextType, which will be replaced\nby network::mojom::RequestDestination",
                        "$ref": "./Audits.types.json#/components/schemas/TypeMixedContentResourceType"
                    },
                    "resolutionStatus": {
                        "description": "The way the mixed content issue is being resolved.",
                        "$ref": "./Audits.types.json#/components/schemas/TypeMixedContentResolutionStatus"
                    },
                    "insecureURL": {
                        "description": "The unsafe http url causing the mixed content issue.",
                        "type": "string"
                    },
                    "mainResourceURL": {
                        "description": "The url responsible for the call to an unsafe url.",
                        "type": "string"
                    },
                    "request": {
                        "description": "The mixed content request.\nDoes not always exist (e.g. for unsafe form submission urls).",
                        "$ref": "./Audits.types.json#/components/schemas/TypeAffectedRequest"
                    },
                    "frame": {
                        "description": "Optional because not every mixed content issue is necessarily linked to a frame.",
                        "$ref": "./Audits.types.json#/components/schemas/TypeAffectedFrame"
                    }
                },
                "required": [
                    "resolutionStatus",
                    "insecureURL",
                    "mainResourceURL"
                ]
            },
            "TypeMixedContentResourceType": {
                "type": "string"
            },
            "TypeMixedContentResolutionStatus": {
                "type": "string"
            },
            "TypeAffectedFrame": {
                "description": "Information about the frame affected by an inspector issue.",
                "type": "object",
                "properties": {
                    "frameId": {
                        "$ref": "./Page.types.json#/components/schemas/TypeFrameId"
                    }
                },
                "required": [
                    "frameId"
                ]
            },
            "TypeBlockedByResponseIssueDetails": {
                "description": "Details for a request that has been blocked with the BLOCKED_BY_RESPONSE\ncode. Currently only used for COEP/COOP, but may be extended to include\nsome CSP errors in the future.",
                "type": "object",
                "properties": {
                    "request": {
                        "$ref": "./Audits.types.json#/components/schemas/TypeAffectedRequest"
                    },
                    "parentFrame": {
                        "$ref": "./Audits.types.json#/components/schemas/TypeAffectedFrame"
                    },
                    "blockedFrame": {
                        "$ref": "./Audits.types.json#/components/schemas/TypeAffectedFrame"
                    },
                    "reason": {
                        "$ref": "./Audits.types.json#/components/schemas/TypeBlockedByResponseReason"
                    }
                },
                "required": [
                    "request",
                    "reason"
                ]
            },
            "TypeBlockedByResponseReason": {
                "description": "Enum indicating the reason a response has been blocked. These reasons are\nrefinements of the net error BLOCKED_BY_RESPONSE.",
                "type": "string"
            },
            "TypeHeavyAdIssueDetails": {
                "type": "object",
                "properties": {
                    "resolution": {
                        "description": "The resolution status, either blocking the content or warning.",
                        "$ref": "./Audits.types.json#/components/schemas/TypeHeavyAdResolutionStatus"
                    },
                    "reason": {
                        "description": "The reason the ad was blocked, total network or cpu or peak cpu.",
                        "$ref": "./Audits.types.json#/components/schemas/TypeHeavyAdReason"
                    },
                    "frame": {
                        "description": "The frame that was blocked.",
                        "$ref": "./Audits.types.json#/components/schemas/TypeAffectedFrame"
                    }
                },
                "required": [
                    "resolution",
                    "reason",
                    "frame"
                ]
            },
            "TypeHeavyAdResolutionStatus": {
                "type": "string"
            },
            "TypeHeavyAdReason": {
                "type": "string"
            },
            "TypeContentSecurityPolicyIssueDetails": {
                "type": "object",
                "properties": {
                    "blockedURL": {
                        "description": "The url not included in allowed sources.",
                        "type": "string"
                    },
                    "violatedDirective": {
                        "description": "Specific directive that is violated, causing the CSP issue.",
                        "type": "string"
                    },
                    "isReportOnly": {
                        "type": "boolean"
                    },
                    "contentSecurityPolicyViolationType": {
                        "$ref": "./Audits.types.json#/components/schemas/TypeContentSecurityPolicyViolationType"
                    },
                    "frameAncestor": {
                        "$ref": "./Audits.types.json#/components/schemas/TypeAffectedFrame"
                    },
                    "sourceCodeLocation": {
                        "$ref": "./Audits.types.json#/components/schemas/TypeSourceCodeLocation"
                    },
                    "violatingNodeId": {
                        "$ref": "./DOM.types.json#/components/schemas/TypeBackendNodeId"
                    }
                },
                "required": [
                    "violatedDirective",
                    "isReportOnly",
                    "contentSecurityPolicyViolationType"
                ]
            },
            "TypeContentSecurityPolicyViolationType": {
                "type": "string"
            },
            "TypeSourceCodeLocation": {
                "type": "object",
                "properties": {
                    "scriptId": {
                        "$ref": "./Runtime.types.json#/components/schemas/TypeScriptId"
                    },
                    "url": {
                        "type": "string"
                    },
                    "lineNumber": {
                        "type": "integer"
                    },
                    "columnNumber": {
                        "type": "integer"
                    }
                },
                "required": [
                    "url",
                    "lineNumber",
                    "columnNumber"
                ]
            },
            "TypeSharedArrayBufferIssueDetails": {
                "description": "Details for a issue arising from an SAB being instantiated in, or\ntransferred to a context that is not cross-origin isolated.",
                "type": "object",
                "properties": {
                    "sourceCodeLocation": {
                        "$ref": "./Audits.types.json#/components/schemas/TypeSourceCodeLocation"
                    },
                    "isWarning": {
                        "type": "boolean"
                    },
                    "type": {
                        "$ref": "./Audits.types.json#/components/schemas/TypeSharedArrayBufferIssueType"
                    }
                },
                "required": [
                    "sourceCodeLocation",
                    "isWarning",
                    "type"
                ]
            },
            "TypeSharedArrayBufferIssueType": {
                "type": "string"
            },
            "TypeTrustedWebActivityIssueDetails": {
                "type": "object",
                "properties": {
                    "url": {
                        "description": "The url that triggers the violation.",
                        "type": "string"
                    },
                    "violationType": {
                        "$ref": "./Audits.types.json#/components/schemas/TypeTwaQualityEnforcementViolationType"
                    },
                    "httpStatusCode": {
                        "type": "integer"
                    },
                    "packageName": {
                        "description": "The package name of the Trusted Web Activity client app. This field is\nonly used when violation type is kDigitalAssetLinks.",
                        "type": "string"
                    },
                    "signature": {
                        "description": "The signature of the Trusted Web Activity client app. This field is only\nused when violation type is kDigitalAssetLinks.",
                        "type": "string"
                    }
                },
                "required": [
                    "url",
                    "violationType"
                ]
            },
            "TypeTwaQualityEnforcementViolationType": {
                "type": "string"
            },
            "TypeLowTextContrastIssueDetails": {
                "type": "object",
                "properties": {
                    "violatingNodeId": {
                        "$ref": "./DOM.types.json#/components/schemas/TypeBackendNodeId"
                    },
                    "violatingNodeSelector": {
                        "type": "string"
                    },
                    "contrastRatio": {
                        "type": "number"
                    },
                    "thresholdAA": {
                        "type": "number"
                    },
                    "thresholdAAA": {
                        "type": "number"
                    },
                    "fontSize": {
                        "type": "string"
                    },
                    "fontWeight": {
                        "type": "string"
                    }
                },
                "required": [
                    "violatingNodeId",
                    "violatingNodeSelector",
                    "contrastRatio",
                    "thresholdAA",
                    "thresholdAAA",
                    "fontSize",
                    "fontWeight"
                ]
            },
            "TypeCorsIssueDetails": {
                "description": "Details for a CORS related issue, e.g. a warning or error related to\nCORS RFC1918 enforcement.",
                "type": "object",
                "properties": {
                    "corsErrorStatus": {
                        "$ref": "./Network.types.json#/components/schemas/TypeCorsErrorStatus"
                    },
                    "isWarning": {
                        "type": "boolean"
                    },
                    "request": {
                        "$ref": "./Audits.types.json#/components/schemas/TypeAffectedRequest"
                    },
                    "location": {
                        "$ref": "./Audits.types.json#/components/schemas/TypeSourceCodeLocation"
                    },
                    "initiatorOrigin": {
                        "type": "string"
                    },
                    "resourceIPAddressSpace": {
                        "$ref": "./Network.types.json#/components/schemas/TypeIpAddressSpace"
                    },
                    "clientSecurityState": {
                        "$ref": "./Network.types.json#/components/schemas/TypeClientSecurityState"
                    }
                },
                "required": [
                    "corsErrorStatus",
                    "isWarning",
                    "request"
                ]
            },
            "TypeAttributionReportingIssueDetails": {
                "description": "Details for issues around \"Attribution Reporting API\" usage.\nExplainer: https://github.com/WICG/attribution-reporting-api",
                "type": "object",
                "properties": {
                    "violationType": {
                        "$ref": "./Audits.types.json#/components/schemas/TypeAttributionReportingIssueType"
                    },
                    "request": {
                        "$ref": "./Audits.types.json#/components/schemas/TypeAffectedRequest"
                    },
                    "violatingNodeId": {
                        "$ref": "./DOM.types.json#/components/schemas/TypeBackendNodeId"
                    },
                    "invalidParameter": {
                        "type": "string"
                    }
                },
                "required": [
                    "violationType"
                ]
            },
            "TypeAttributionReportingIssueType": {
                "type": "string"
            },
            "TypeQuirksModeIssueDetails": {
                "description": "Details for issues about documents in Quirks Mode\nor Limited Quirks Mode that affects page layouting.",
                "type": "object",
                "properties": {
                    "isLimitedQuirksMode": {
                        "description": "If false, it means the document's mode is \"quirks\"\ninstead of \"limited-quirks\".",
                        "type": "boolean"
                    },
                    "documentNodeId": {
                        "$ref": "./DOM.types.json#/components/schemas/TypeBackendNodeId"
                    },
                    "url": {
                        "type": "string"
                    },
                    "frameId": {
                        "$ref": "./Page.types.json#/components/schemas/TypeFrameId"
                    },
                    "loaderId": {
                        "$ref": "./Network.types.json#/components/schemas/TypeLoaderId"
                    }
                },
                "required": [
                    "isLimitedQuirksMode",
                    "documentNodeId",
                    "url",
                    "frameId",
                    "loaderId"
                ]
            },
            "TypeNavigatorUserAgentIssueDetails": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string"
                    },
                    "location": {
                        "$ref": "./Audits.types.json#/components/schemas/TypeSourceCodeLocation"
                    }
                },
                "required": [
                    "url"
                ]
            },
            "TypeGenericIssueDetails": {
                "description": "Depending on the concrete errorType, different properties are set.",
                "type": "object",
                "properties": {
                    "errorType": {
                        "description": "Issues with the same errorType are aggregated in the frontend.",
                        "$ref": "./Audits.types.json#/components/schemas/TypeGenericIssueErrorType"
                    },
                    "frameId": {
                        "$ref": "./Page.types.json#/components/schemas/TypeFrameId"
                    },
                    "violatingNodeId": {
                        "$ref": "./DOM.types.json#/components/schemas/TypeBackendNodeId"
                    }
                },
                "required": [
                    "errorType"
                ]
            },
            "TypeGenericIssueErrorType": {
                "type": "string"
            },
            "TypeDeprecationIssueDetails": {
                "description": "This issue tracks information needed to print a deprecation message.\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/core/frame/third_party/blink/renderer/core/frame/deprecation/README.md",
                "type": "object",
                "properties": {
                    "affectedFrame": {
                        "$ref": "./Audits.types.json#/components/schemas/TypeAffectedFrame"
                    },
                    "sourceCodeLocation": {
                        "$ref": "./Audits.types.json#/components/schemas/TypeSourceCodeLocation"
                    },
                    "type": {
                        "description": "One of the deprecation names from third_party/blink/renderer/core/frame/deprecation/deprecation.json5",
                        "type": "string"
                    }
                },
                "required": [
                    "sourceCodeLocation",
                    "type"
                ]
            },
            "TypeClientHintIssueDetails": {
                "description": "This issue tracks client hints related issues. It's used to deprecate old\nfeatures, encourage the use of new ones, and provide general guidance.",
                "type": "object",
                "properties": {
                    "sourceCodeLocation": {
                        "$ref": "./Audits.types.json#/components/schemas/TypeSourceCodeLocation"
                    },
                    "clientHintIssueReason": {
                        "$ref": "./Audits.types.json#/components/schemas/TypeClientHintIssueReason"
                    }
                },
                "required": [
                    "sourceCodeLocation",
                    "clientHintIssueReason"
                ]
            },
            "TypeClientHintIssueReason": {
                "type": "string"
            },
            "TypeFederatedAuthRequestIssueDetails": {
                "type": "object",
                "properties": {
                    "federatedAuthRequestIssueReason": {
                        "$ref": "./Audits.types.json#/components/schemas/TypeFederatedAuthRequestIssueReason"
                    }
                },
                "required": [
                    "federatedAuthRequestIssueReason"
                ]
            },
            "TypeFederatedAuthRequestIssueReason": {
                "description": "Represents the failure reason when a federated authentication reason fails.\nShould be updated alongside RequestIdTokenStatus in\nthird_party/blink/public/mojom/devtools/inspector_issue.mojom to include\nall cases except for success.",
                "type": "string"
            },
            "TypeIssueId": {
                "description": "A unique id for a DevTools inspector issue. Allows other entities (e.g.\nexceptions, CDP message, console messages, etc.) to reference an issue.",
                "type": "string"
            }
        }
    }
}